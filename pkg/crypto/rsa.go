package crypto

import (
	"fmt"
	"math/big"
)

/*
func init() {
	test := []byte { byte(3) & 0xFF, byte(232&0xFF)}
	fmt.Println(test, new(big.Int).SetBytes([]byte{3, 232}))
	test = EncryptRSA(test)
	fmt.Println(test)
	test = DecryptRSA(test)
	fmt.Println(test)
}
*/

//3072bit primes
var mod = checkErr(new(big.Int).SetString("25975647997323894928605298784049170709283348699927753800970400116676222425370220384471814883087120313699091899396731910149165465411878647810504616372917546983385513991211413764556252151693819546894098925615808624901146028951810426672207414068928199695732513394289906328822177392588819763820442571118327548300937382165383286575756774629081545178140640756408300185399123476436944969484613650635036202326904357962770719034683990513069490411431708430730273153282293152362893886563074038860182291848447768940091189854869847942173052330991381459023945251839133090921913249854479219224289982572999110712187894841816569600019830634480093180025231195663095982044494093110869223770760248427936015549969063669437470963992620076214917832958046753596614817374226136264339878153164008258862127501966307653774915582751694600882179653933316857453336778945870440858657694618852105138528934025361429815407054855130705200207115926909324093832064245808019075361783905844703211800449141310615391681792502286422122608225503309460998623145883993395433592840734240564859228481958083516619563529413166977187837017361307995818918302245612110855964564199674942698011175398404614395390130617941698131551330068466058680354297599551261724409483467617465446964679509057231960518059369939159447560802361274041847881527287310276077589772079278488367021541198183305688671180059946179789712990365069020916997093578386956671821732367655192822071134597924663737945728529487115532986077194862693931592616417468962220591311479551362867098223834031408639695220321787955893449781891692318849012200113730432203758314137772446165424041803614693479956553829826673575281177489259368696373109305038114934436626538988653742091902531601953566679715906201074232742347773664833111839043704972318839574123946181585840713539730587441799695555233199440613536059278073170267583156119768680111504504705213", 10))
var priv = checkErr(new(big.Int).SetString("25669149480879388993130073212225149805939263742097954125518073353603779304929510570004920726507030101271239129295485989371669217687865127432257265758977452916480129074053194205393339526690225592722807816681853202197600040069130160307106967563985352526016254154751004346132605062494213279149331865485666199140881462825470083960672641755059891993763623554498594382497122419740058217672160893111609488644705627134939087834296010537634187234575299242317591454359303455535780360118267636209110793565095894661640236584963791323811312040048953835782213355924665657458141905555231124226577784702239747675328661077657094597031483823807663031368516881021768181225874295763352420230873103869952796888569082396688497151762942581931436682209535813232052120657431430409770495907994676813429998256777576776776934414342116273967276723130070090017820769592824823921522753376721602486421016528887305387666331033231652481020673777532583539214085037916448119815732988636799370133720207725950646763340679988978156074079370005625906971527358151857751607205071681469500420849297169669258827006001153431610456525764869200063664513670104494143934671175268355645853554683485092317345582577898346404212144488798965049025494607909114264191738064121162945750553198070636507562821095729804013382619013974029335018386616419701256481440368718871722302961680248299640327233797014812787771124385750321948328126644200635451102142099196416127662701598357246345871311139892574390702576256555378166424564441861310214432700315169274116239644392249478442906404789026602617492033010298540994123296573293760045241295356902438528533638773752327981951925972176972495292161159782720171802696015721276524747956119855584744321409404820090769891918600871432358331184919042114650667720171784852412704719681543863998520663091410241460396007715489616946834770292766377085086370023147497274082927495597", 10))
var pub = checkErr(new(big.Int).SetString("4536439045993165655799875671648629749865285005957721398992212981975145635146725168305918022501695380644063460612548155218025502173762071486316925497773405888560928485216086770445138768516451292175836986654475220257053087941593538794310050181554036749444305960242230853354892811669402591392974339808266837809102515358292025308962818098605230721351469881015593576351896661264963039742939413297884863321953176209728112929990395531840276170674095721666161368002116323565921880205030701967949061053334163196910825009651999903606517088081575546289913014084801228253291536501077680270373623690238333851317054011832103608976820705509288499216244815610047574524455582077189600690870359367470956504075598344195868285640557174290580131051499410534961557118833450472691966209207617080455866817076025224121924459080148488950575254572764537339513019044701097857761713924790447123775395469973562931673579841251519616727380600834112870898361", 10))

//512bit primes
//var mod = checkErr(new(big.Int).SetString("121727957757863576101561860005285292626079113266451124223351027655156011238254177877652729098983576274837395085392103662934978533548660507677480253506715648449246069310428873797293036242698272731265802720055413141023411018398284944110799347717001885969188133010830020603318079626459849229187149790609728348667", 10))
//var priv = checkErr(new(big.Int).SetString("39574754648544995073200949288114212279763356643380221180569460664855696662160882512059875754822652518160202239533245623544435635274825672366080266671146999893044984788215998341126495384938227705193172944227710071442663553068050822068193588197727598992397886903673557185565299947088350518351942016798869358001", 10))
//var pub = checkErr(new(big.Int).SetString("12256971504525176577999115521306614075749098639988274452692554670619288210288814203087336665303501555493198422881032409199392946347224070978354126295353401", 10))

func EncryptRSA(data []byte) []byte {
	return new(big.Int).Exp(new(big.Int).SetBytes(data), pub, mod).Bytes()
}

func DecryptRSA(data []byte) []byte {
	return new(big.Int).Exp(new(big.Int).SetBytes(data), priv, mod).Bytes()
}

func checkErr(b *big.Int, ok bool) *big.Int {
	if !ok {
		fmt.Println("Ran into some error initializing RSA:")
		return nil
	}
	return b
}
