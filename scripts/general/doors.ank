bind = import("bind")
strings = import("strings")
log = import("log")
world = import("world")

locked = [109]
doors = {2: 1}

gates = {59: 60, 58: 57, 63: 64}

gatePredicate = func(object, click) {
	for open, closed in gates {
		if object.ID == open || object.ID == closed {
			return true
		}
	}
	return false
}

doorPredicate = func(object, click) {
	for open, closed in doors {
		if object.ID == open || object.ID == closed {
			return true
		}
	}
	for closed in locked {
        if object.ID == closed {
            return true
        }
    }
	return false
}

bind.object(gatePredicate, func(player, object, click) {
	player.PlaySound(objectDefs[object.ID].Commands[click] + "door")
	for open, closed in gates {
		if object.ID == open || object.ID == closed {
			world.replaceObject(object, object.ID == closed ? open : closed)
			return
		}
	}

	// This will be where locked gates end up handled probably
	log.debugf("unhandled gate: %v click=%d\n", object, click)
})

bind.boundary(doorPredicate, func(player, object, click) {
	player.PlaySound(strings.ToLower(boundaryDefs[object.ID].Commands[click] + "door"))
	for open, closed in doors {
		if object.ID == open || object.ID == closed {
			world.replaceObject(object, object.ID == closed ? open : closed)
			return
		}
	}

	// reaching here indicates a locked door
	for door in locked {
		if object.ID == door {
			handleLockedDoor(player, object)
			return
		}
	}

	log.debugf("unhandled door: %v click=%d\n", object, click)
})

func handleLockedDoor(player, object) {
	oldID = object.ID
	destX = object.X()
	destY = object.Y()
	if object.Direction == 0 {
		if player.X() == destX && player.Y() == destY {
			destY -= 1
		}
	} else if object.Direction == 1 {
		if player.X() == destX && player.Y() == destY {
			destX -= 1
		}
	} else if object.Direction == 2 {
		if (object.X() == player.X()) && (object.Y() == player.Y() + 1) {
			destY += 1
		} else if (object.X() == player.X() - 1) && (object.Y() == player.Y()) {
			destX -= 1
		} else if (object.X() == player.X()) && (object.Y() == player.Y() - 1) {
			destY -= 1
		} else if (object.X() == player.X() + 1) && (object.Y() == player.Y()) {
			destX += 1
		}
	} else if object.Direction == 3 {
		if (object.X() == player.X()) && (object.Y() == player.Y() - 1) {
			destY -= 1
		} else if (object.X() == player.X() + 1) && (object.Y() == player.Y()) {
			destX += 1
		} else if (object.X() == player.X()) && (object.Y() == player.Y() + 1) {
			destY += 1
		} else if (object.X() == player.X() - 1) && (object.Y() == player.Y()) {
			destX -= 1
		}
	}
	openDoor = world.replaceObject(object, 11)
	player.Teleport(destX, destY)
	go runAfter(3*Second, func() {
		player.PlaySound("closedoor")
		world.replaceObject(openDoor, oldID)
	})
}
