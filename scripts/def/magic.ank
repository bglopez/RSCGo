//Notes:
//Spell Definition kinds:
//0 cast on Self = teleporting, charing godmage, bones to bananas, etc
//2 cast on mobTarget = missile spells and curse spells, if no dmg defined must be curse
//3 cast on Enchant jewelery = crafting related, telegrab, low/high alch and superheat??
//5 cast on Enchant orbs = any of the orb related spells I think.

math = import("math")
time = import("time")

godspells = [
	{
		"name": "guthix",
		"animation": 1142,
		"cape": 1215,
		"staff": 1217,
		"depleteStat": DEFENSE,
		"depleteBy": 0.02,
	},
	{
		"name": "saradomin",
		"animation": 1031,
		"cape": 1214,
		"staff": 1218,
		"depleteStat": PRAYER,
		"depleteBy": 1,
	},
	{
		"name": "zamorak",
		"animation": 1036,
		"cape": 1213,
		"staff": 1216,
		"depleteStat": MAGIC,
		"depleteBy": 0.02,
	},
]
func handleGodSpell(player, spell) {
	player.WalkingRangedAction(spell.target, func() {
		if !player.CanAttack(spell.target) {
			if player.IsDueling() && player.IsFighting() && spell.target == player.DuelTarget() && !player.AttributeList.VarBool("duelCanMagic", true) {
				player.Message("Magic cannot be used during this duel!")
			}
			player.ResetPath()
			return
		}
		player.ResetAllExceptDueling()

		godIdx = spell.idx - 33
		if godIdx < 0 || godIdx - 33 >= len(godspells) {
			log.debugf("Invalid godspell index:got %d\n", spell.idx)
			return
		}
		
		godspell = godspells[godIdx]
	
		cape = player.Inventory.GetByID(godspell.cape)
		staff = player.Inventory.GetByID(godspell.staff)
		if staff == nil || !staff.Worn {
			player.Message("you must wield the staff of " + godspell.name + " to cast this spell")
			return
		}
	
		// TODO: When minigame is finished, add checks for whether in mage arena or not and for total arena casts
		chargedAt = player.Cache("magic_charge")
		power = 25
		if chargedAt == nil || chargedAt.IsZero() || !chargedAt.After(time.Now()) {
			// weaker spell if no recent charge
			power -= 8 // 25 down to 18
		}

		if cape == nil || !cape.Worn {
			// weaker spell if no matching cape
			power -= 8 // 25 or 18 down to 18 or 10
		}

		if !spellCast(defs[spell.idx], player) {
			return
		}
	
		if world.getObjectAt(spell.target.X(), spell.target.Y()) == nil {
			animation = newObject(godspell.animation, NORTH, spell.target.X(), spell.target.Y(), false)
			world.addObject(animation)
			go runAfter(Millisecond*1280, func() {
				world.removeObject(animation)
			})
		}

		fireMissile(player, spell, power)

		depleteBy = toInt(math.Ceil(spell.target.Skills().Current(godspell.depleteStat) * godspell.depleteBy))
		minStat = spell.target.Skills().Maximum(godspell.depleteStat) - toInt(math.Ceil((spell.target.Skills().Current(godspell.depleteStat) * godspell.depleteBy) * 4))
		if spell.idx == 34 {
			depleteBy = 1
			minStat = 0
		}
		newStat = spell.target.Skills().Current(godspell.depleteStat) - depleteBy
		if spell.target.IsPlayer() && newStat < minStat {
			player.Message("@que@Your opponent already has weakened " + skillName(godspell.depleteStat))
			return
		}
		spell.target.Skills().SetCur(godspell.depleteStat, newStat)
		targetp = asPlayer(spell.target)
		if targetp != nil {
			targetp.Message("Your " + skillName(godspell.depleteStat) + " has been reduced by the spell!")
			targetp.SendStat(godspell.depleteStat)
		}
	})
}
	
func newMissileHandler(power) {
	return func(player, spell) {
		player.WalkingRangedAction(spell.target, func() {
			if !player.CanAttack(spell.target) {
				if player.IsDueling() && player.IsFighting() && spell.target == player.DuelTarget() && !player.AttributeList.VarBool("duelCanMagic", true) {
					player.Message("Magic cannot be used during this duel!")
				}
				player.ResetPath()
				return
			}
			player.ResetAllExceptDueling()
			if !spellCast(defs[spell.idx], player) {
				return
			}

			fireMissile(player, spell, power)
		})
	}
}

func newWeakenHandler(depleteStat, depletePercent) {
	return func(player, spell) {
		player.WalkingRangedAction(spell.target, func() {
			if !player.CanAttack(spell.target) {
				if player.IsDueling() && player.IsFighting() && spell.target == player.DuelTarget() && !player.AttributeList.VarBool("duelCanMagic", true) {
					player.Message("Magic cannot be used during this duel!")
				}
				player.ResetPath()
				return
			}
			player.ResetAllExceptDueling()
			if !spellCast(defs[spell.idx], player) {
				return
			}
			depleteBy = toInt(math.Ceil(spell.target.Skills().Current(depleteStat) * depletePercent))
			minStat = spell.target.Skills().Maximum(depleteStat) - toInt(math.Ceil((spell.target.Skills().Current(depleteStat) * depletePercent)))
			if spell.idx == 34 {
				depleteBy = 1
				minStat = 0
			}
			newStat = spell.target.Skills().Current(depleteStat) - depleteBy
			if spell.target.IsPlayer() && newStat < minStat {
				player.Message("@que@Your opponent already has weakened " + skillName(depleteStat))
				return
			}
			for p in player.NearbyPlayers() {
				p.QueueProjectile(player, spell.target, 1)
			}
			player.QueueProjectile(player, spell.target, 1)
			spell.target.Skills().SetCur(depleteStat, newStat)
			targetp = asPlayer(spell.target)
			if targetp != nil {
				targetp.Message("You have been weakened")
				targetp.SendStat(depleteStat)
			}
		})
	}
}

func fireMissile(player, spell, dmg) {
	hit = player.MagicDamage(spell.target, dmg)
	spell.target.Skills().DecreaseCur(HITPOINTS, hit)
	if spell.target.Skills().Current(HITPOINTS) <= 0 {
		spell.target.Killed(player)
		return
	}
	for p in player.NearbyPlayers() {
		p.QueueProjectile(player, spell.target, 1)
	}
	player.QueueProjectile(player, spell.target, 1)
	spell.target.Damage(hit)
	targetp = asPlayer(spell.target)
	if targetp != nil {
		targetp.Message("Warning! " + player.Username() + " is shooting at you!")
	}
}

func newTeleportHandler(x, y) {
	return func(player, spell) {
		if player.Wilderness() >= 20 {
			player.Message("A mysterious force blocks your teleport spell!")
			player.Message("You can't use teleport after level 20 wilderness")
			return
		}
		if !spellCast(defs[spell.idx], player) {
			return
		}

		world.teleport(player, x, y, true)
	}
}

func spellCast(s, player) {
	player.ResetPath()
	lastCast = player.AttributeList.VarTime("lastSpell")
	if !lastCast.IsZero() && lastCast.After(time.Now()) {
		player.Message("@que@You need to wait " + toInt(time.Until(lastCast).Seconds()) + " seconds before you can cast another spell")
		return false
	}

	lvDelta = player.Skills().Current(MAGIC) - s.level
	if lvDelta < 0 {
		player.Message("Your magic ability is not high enough for this spell.")
		return false
	}

	if checkAndRemoveRunes(player, s) {
		return false
	}
	// ORSC does the below check in steps, but if clamped with helper funcs we can do it in one check.
	if lvDelta < 10-math.Min(math.Max((player.MagicPoints()-5)/5, 0), 5) && rand(0, (lvDelta+2)*2) == 0 {
		player.AttributeList.SetVar("lastSpell", time.Now().Add(Millisecond*20000))
		player.PlaySound("spellfail")
		player.Message("The spell fails! You may try again in 20 seconds")
		return false
	}
	player.AttributeList.SetVar("lastSpell", time.Now().Add(Millisecond * 1280))
    player.PlaySound("spellok")
    player.Message("Cast spell successfully")
	return true
}

func checkAndRemoveRunes(player, s) {
	for id, amt in s.runes {
		if player.Inventory.CountID(id) < amt {
			log.cheatf("%v casted spell with not enough runes (shouldn't happen)\n", player)
			player.Message("You don't have all the reagents you need for this spell")
			return true
		}
	}
	for id, amt in s.runes {
		player.Inventory.RemoveByID(id, amt)
	}
	return false
}

defs = [
	{
		"level": 1,
		"name": "Wind strike",
		"desc": "A strength 1 missile attack",
		"kind": 2,
		"handler": newMissileHandler(1),
		"runes": {
			33: 1,
			35: 1,
		}
	},
	{
		"level": 3,
		"name": "Confuse",
		"desc": "Reduces your opponents attack by 5%",
		"kind": 2,
		"handler": newWeakenHandler(ATTACK, 0.05),
		"runes": {
			32: 3,
			34: 2,
			36: 1,
		}
	},
	{
		"level": 5,
		"name": "Water strike",
		"desc": "A strength 2 missile attack",
		"kind": 2,
		"handler": newMissileHandler(2),
		"runes": {
			32: 1,
			33: 1,
			35: 1,
		}
	},
	{
		"level": 7,
		"name": "Enchant lvl-1 amulet",
		"desc": "For use on sapphire amulets",
		"kind": 3,
		"runes": {
			32: 1,
			46: 1,
		}
	},
	{
		"level": 9,
		"name": "Earth strike",
		"desc": "A strength 3 missile attack",
		"kind": 2,
		"handler": newMissileHandler(3),
		"runes": {
			34: 2,
			33: 1,
			35: 1,
		}
	},
	{
		"level": 11,
		"name": "Weaken",
		"desc": "Reduces your opponents strength by 5%",
		"handler": newWeakenHandler(STRENGTH, 0.05),
		"kind": 2,
		"runes": {
			32: 3,
			34: 2,
			36: 1,
		}
	},
	{
		"level": 13,
		"name": "Fire strike",
		"desc": "A strength 4 missile attack",
		"kind": 2,
		"handler": newMissileHandler(4),
		"runes": {
			31: 3,
			33: 2,
			35: 1,
		}
	},
	{
		"level": 15,
		"name": "Bones to bananas",
		"desc": "Changes all held bones into bananas!",
		"kind": 0,
		"handler": func(player, spell) {
			amt = player.Inventory.CountID(ids.BONES)
			if amt <= 0 {
				player.Message("You aren't holding any bones!")
				return
			}
			if !spellCast(defs[spell.idx], player) {
				return
			}
			for i in range(amt) {
				if player.Inventory.Remove(player.Inventory.GetIndex(ids.BONES)) {
					player.Inventory.Add(ids.BANANA, 1)
				}
			}
			player.SendInventory()
		},
		"runes": {
			34: 2,
			32: 2,
			40: 1,
		}
	},
	{
		"level": 17,
		"name": "Wind bolt",
		"desc": "A strength 5 missile attack",
		"kind": 2,
		"handler": newMissileHandler(5),
		"runes": {
			33: 2,
			41: 1,
		}
	},
	{
		"level": 19,
		"name": "Curse",
		"desc": "Reduces your opponents defense by 5%",
		"handler": newWeakenHandler(DEFENSE, 0.05),
		"kind": 2,
		"runes": {
			32: 2,
			34: 3,
			36: 1,
		}
	},
	{
		"level": 21,
		"name": "Low level alchemy",
		"desc": "Converts an item into gold",
		"kind": 3,
		"runes": {
			31: 3,
			40: 1,
		}
	},
	{
		"level": 23,
		"name": "Water bolt",
		"desc": "A strength 6 missile attack",
		"kind": 2,
		"handler": newMissileHandler(6),
		"runes": {
			32: 2,
			33: 2,
			41: 1,
		}
	},
	{
		"level": 25,
		"name": "Varrock teleport",
		"desc": "Teleports you to Varrock",
		"kind": 0,
		"handler": newTeleportHandler(120, 504),
		"runes": {
			31: 1,
			33: 3,
			42: 1,
		}
	},
	{
		"level": 27,
		"name": "Enchant lvl-2 amulet",
		"desc": "For use on emerald amulets",
		"kind": 3,
		"runes": {
			33: 3,
			46: 1,
		}
	},
	{
		"level": 29,
		"name": "Earth bolt",
		"desc": "A strength 7 missile attack",
		"kind": 2,
		"handler": newMissileHandler(7),
		"runes": {
			34: 3,
			33: 2,
			41: 1,
		}
	},
	{
		"level": 31,
		"name": "Lumbridge teleport",
		"desc": "Teleports you to Lumbridge",
		"kind": 0,
		"handler": newTeleportHandler(120, 648),
		"runes": {
			34: 1,
			33: 3,
			42: 1,
		}
	},
	{
		"level": 33,
		"name": "Telekinetic grab",
		"desc": "Take an item you can see but can't reach",
		"kind": 3,
		"runes": {
			33: 1,
			42: 1,
		}
	},
	{
		"level": 35,
		"name": "Fire bolt",
		"desc": "A strength 8 missile attack",
		"kind": 2,
		"handler": newMissileHandler(8),
		"runes": {
			31: 4,
			33: 3,
			41: 1,
		}
	},
	{
		"level": 37,
		"name": "Falador teleport",
		"desc": "Teleports you to Falador",
		"kind": 0,
		"handler": newTeleportHandler(312, 552),
		"runes": {
			32: 1,
			33: 3,
			42: 1,
		}
	},
	{
		"level": 39,
		"name": "Crumble undead",
		"desc": "Hits skeleton, ghosts & zombies hard!",
		"kind": 2,
		"runes": {
			34: 2,
			33: 2,
			41: 1,
		}
	},
	{
		"level": 41,
		"name": "Wind blast",
		"desc": "A strength 9 missile attack",
		"kind": 2,
		"handler": newMissileHandler(9),
		"runes": {
			33: 3,
			38: 1,
		}
	},
	{
		"level": 43,
		"name": "Superheat item",
		"desc": "Smelt 1 ore without a furnace",
		"kind": 3,
		"runes": {
			31: 4,
			40: 1,
		}
	},
	{
		"level": 45,
		"name": "Camelot teleport",
		"desc": "Teleports you to Camelot",
		"kind": 0,
		"handler": newTeleportHandler(465, 456),
		"runes": {
			33: 5,
			42: 1,
		}
	},
	{
		"level": 47,
		"name": "Water blast",
		"desc": "A strength 10 missile attack",
		"kind": 2,
		"handler": newMissileHandler(10),
		"runes": {
			32: 3,
			33: 3,
			38: 1,
		}
	},
	{
		"level": 49,
		"name": "Enchant lvl-3 amulet",
		"desc": "For use on ruby amulets",
		"kind": 3,
		"runes": {
			31: 5,
			46: 1,
		}
	},
	{
		"level": 50,
		"name": "Iban blast",
		"desc": "A strength 25 missile attack!",
		"kind": 2,
		"runes": {
			31: 5,
			38: 1,
		}
	},
	{
		"level": 51,
		"name": "Ardougne teleport",
		"desc": "Teleports you to Ardougne",
		"kind": 0,
		"handler": func(player, spell) {
			if !spellCast(defs[spell.idx], player) {
				return
			}

			// world.teleport(player, 588, 621, true)
			player.Message("You don't know how to cast this spell yet")
			player.Message("You need to do the plague city quest")
		},
		"runes": {
			32: 2,
			42: 2,
		}
	},
	{
		"level": 53,
		"name": "Earth blast",
		"desc": "A strength 11 missile attack",
		"kind": 2,
		"handler": newMissileHandler(11),
		"runes": {
			34: 4,
			33: 3,
			38: 1,
		}
	},
	{
		"level": 55,
		"name": "High level alchemy",
		"desc": "Convert an item into more gold",
		"kind": 3,
		"runes": {
			31: 5,
			40: 1,
		}
	},
	{
		"level": 56,
		"name": "Charge Water Orb",
		"desc": "Needs to be cast on a water obelisk",
		"kind": 5,
		"runes": {
			32: 30,
			46: 3,
			611: 1,
		}
	},
	{
		"level": 57,
		"name": "Enchant lvl-4 amulet",
		"desc": "For use on diamond amulets",
		"kind": 3,
		"runes": {
			34: 10,
			46: 1,
		}
	},
	{
		"level": 58,
		"name": "Watchtower teleport",
		"desc": "Teleports you to the watchtower",
		"kind": 0,
		"handler": func(player, spell) {
			if !spellCast(defs[spell.idx], player) {
				return
			}

			// world.teleport(player, 493, 3525, true)
			player.Message("You cannot cast this spell")
			player.Message("You need to finish the watchtower quest first")
		},
		"runes": {
			34: 2,
			42: 2,
		}
	},
	{
		"level": 59,
		"name": "Fire blast",
		"desc": "A strength 12 missile attack",
		"kind": 2,
		"handler": newMissileHandler(12),
		"runes": {
			31: 5,
			33: 4,
			38: 1,
		}
	},
	{
		"level": 60,
		"name": "Claws of Guthix",
		"desc": "Summons the power of Guthix",
		"kind": 2,
		"handler": handleGodSpell,
		"runes": {
			31: 1,
			33: 4,
			619: 2,
		}
	},
	{
		"level": 60,
		"name": "Saradomin strike",
		"desc": "Summons the power of Saradomin",
		"kind": 2,
		"handler": handleGodSpell,
		"runes": {
			31: 2,
			33: 4,
			619: 2,
		}
	},
	{
		"level": 60,
		"name": "Flames of Zamorak",
		"desc": "Summons the power of Zamorak",
		"kind": 2,
		"handler": handleGodSpell,
		"runes": {
			31: 4,
			33: 1,
			619: 2,
		}
	},
	{
		"level": 60,
		"name": "Charge earth Orb",
		"desc": "Needs to be cast on an earth obelisk",
		"kind": 5,
		"runes": {
			34: 30,
			46: 3,
			611: 1,
		}
	},
	{
		"level": 62,
		"name": "Wind wave",
		"desc": "A strength 13 missile attack",
		"kind": 2,
		"handler": newMissileHandler(13),
		"runes": {
			33: 5,
			619: 1,
		}
	},
	{
		"level": 63,
		"name": "Charge Fire Orb",
		"desc": "Needs to be cast on a fire obelisk",
		"kind": 5,
		"runes": {
			31: 30,
			46: 3,
			611: 1,
		}
	},
	{
		"level": 65,
		"name": "Water wave",
		"desc": "A strength 14 missile attack",
		"kind": 2,
		"handler": newMissileHandler(14),
		"runes": {
			32: 7,
			33: 5,
			619: 1,
		}
	},
	{
		"level": 66,
		"name": "Charge air Orb",
		"desc": "Needs to be cast on an air obelisk",
		"kind": 5,
		"runes": {
			33: 30,
			46: 3,
			611: 1,
		}
	},
	{
		"level": 66,
		"name": "Vulnerability",
		"desc": "Reduces your opponents defense by 10%",
		"handler": newWeakenHandler(DEFENSE, 0.1),
		"kind": 2,
		"runes": {
			34: 5,
			32: 5,
			825: 1,
		}
	},
	{
		"level": 68,
		"name": "Enchant lvl-5 amulet",
		"desc": "For use on dragonstone amulets",
		"kind": 3,
		"runes": {
			32: 15,
			34: 15,
			46: 1,
		}
	},
	{
		"level": 70,
		"name": "Earth wave",
		"desc": "A strength 15 missile attack",
		"kind": 2,
		"handler": newMissileHandler(15),
		"runes": {
			34: 7,
			33: 5,
			619: 1,
		}
	},
	{
		"level": 73,
		"name": "Enfeeble",
		"desc": "Reduces your opponents strength by 10%",
		"handler": newWeakenHandler(STRENGTH, 0.1),
		"kind": 2,
		"runes": {
			34: 8,
			32: 8,
			825: 1,
		}
	},
	{
		"level": 75,
		"name": "Fire wave",
		"desc": "A strength 16 missile attack",
		"kind": 2,
		"handler": newMissileHandler(16),
		"runes": {
			31: 7,
			33: 5,
			619: 1,
		}
	},
	{
		"level": 80,
		"name": "Stun",
		"desc": "Reduces your opponents attack by 10%",
		"handler": newWeakenHandler(ATTACK, 0.1),
		"kind": 2,
		"runes": {
			34: 12,
			32: 12,
			825: 1,
		}
	},
	{
		"level": 80,
		"name": "Charge",
		"desc": "Increase your mage arena spells damage",
		"kind": 0,
		"handler": func(player, spell) {
			if world.getObjectAt(player.X(), player.Y()) != nil {
				player.Message("You can't charge power here, please move to a different area")
				return
			}
			if !spellCast(defs[spell.idx], player) {
				return
			}

			player.Message("@gre@You feel charged with magic power")
			player.Attributes.SetVar("magic_charge", time.Now().Add(6*Minute))
			animation = newObject(1147, NORTH, player.X(), player.Y(), false)
			world.addObject(animation)
			go runAfter(Millisecond*1280, func() {
				world.removeObject(animation)
			})
		},
		"runes": {
			31: 3,
			33: 3,
			619: 3,
		}
	},
]
