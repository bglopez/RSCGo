bind = import("bind")
strings = import("strings")
fmt = import("fmt")
time = import("time")
log = import("log")
world = import("world")

func tele(player, args) {
	if len(args) < 2 {
		player.Message("Invalid args.  Usage: ::tele <x> <y>")
		return
	}
	if args[0] == "edgeville" {
		world.teleport(player, 220, 445, true)
	}
	x = toInt(args[0])
	y = toInt(args[1])
	if !withinWorld(x, y) {
		player.Message("Coords out of bounds.")
		return
	}
	world.teleport(player, x, y, true)
}

bind.command("tele", tele)
bind.command("teleport", tele)

bind.command("goto", func(player, args) {
  	if len(args) < 1 {
  		player.Message("Invalid args.  Usage: ::goto <username>")
  		return
  	}
	target, ok = world.getPlayerByName(base37(strings.TrimSpace(strings.Join(args, " "))))
	if target == nil || !ok {
  		player.Message("Could not find player.")
		return
	}
  	world.teleport(player, target.X(), target.Y(), true)
})

bind.command("summon", func(player, args) {
  	if len(args) < 1 {
  		player.Message("Invalid args.  Usage: ::summon <username>")
  		return
  	}
	target, ok = world.getPlayerByName(base37(strings.TrimSpace(strings.Join(args, " "))))
	if !ok || target == nil {
  		player.Message("Could not find player.")
		return
	}
  	world.teleport(target, player.X(), player.Y(), true)
})

bind.command("walkto", func(player, args) {
	if len(args) < 2 {
		player.Message("Invalid args.  Usage: ::walkto <x> <y>")
		return
	}
	x = toInt(args[0])
	y = toInt(args[1])
	start = time.Now()
	world.walkTo(player, x, y)
	log.debugf("took: %v\n", time.Since(start))
})

bind.command("next", func(player, args) {
	if len(args) < 2 {
		player.Message("Invalid args.  Usage: ::walkto <x> <y>")
		return
	}
	x = toInt(args[0])
	y = toInt(args[1])
	player.Message("NextTo(" + x + "," + y + "): " + player.NextToCoords(x, y))
	log.debug("NextTo(" + x + "," + y + "): " + player.NextToCoords(x, y))
})

bind.command("tile", func(player, args) {
	regionX = toInt((2304 + player.X()) / 48)
	regionY = toInt((1776 + player.Y() - (944 * player.Plane())) / 48)
	mapSector = fmt.Sprintf("h%dx%dy%d", player.Plane(), regionX, regionY)
	areaX = (2304 + player.X()) % 48
	areaY = (1776 + player.Y() - (944 * player.Plane())) % 48
	tile = world.tileData(player.X(), player.Y())
	player.Message(fmt.Sprintf("@que@worldX,Y:(%v,%v) Sector(%v sectorX,Y:(%v,%v)): obj:%v, bitmask:%v",
			player.X(), player.Y(), mapSector, areaX, areaY, world.getObjectAt(player.X(), player.Y()), tile.CollisionMask))
})

bind.command("goup", func(player, args) {
	oldPlane = player.Plane()
	if oldPlane != 2 {
		player.SetLocation(player.Above(), true)
		if oldPlane != player.Plane() {
			player.SendPlane()
		}
	}
})

bind.command("godown", func(player, args) {
	oldPlane = player.Plane()
	if oldPlane != 3 {
		player.SetLocation(player.Below(), true)
		if oldPlane != player.Plane() {
			player.SendPlane()
		}
	}
})
